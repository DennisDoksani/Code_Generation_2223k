openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/681990/BankkAPIiiv2/1.0.0
  - url: https://virtserver.swaggerhub.com/681990/Bankkk/1.0.0
info:
  version: 1.0.0
  title: Banking API
  description: Accounts Endpoints for Banking API
tags:
  - name: Employee Access
    description: Employee Access required in order to access this resource
  - name: Customer Access & Employee Access
    description: Customer Access & Employee Access required in order to access this resource
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples:
    FullAccountEg1: 
      value: 
        accountNumber: NL90 INHO 0987 6543 21
        accountBalance: 1500.00
        creationDate: 25/04/2023
        absoluteLimit: 0
        isActive: true
        accountType: saving
        accountHolder:
          bsn: 1234566
          daylimit: 1000
          transactionLimit: 1000
          firstName: Test2
          lastName: Inholland2
    FullAccountEg2:
      value: 
        accountNumber: NL90 INHO 0987 6543 21
        accountBalance: 1500.00
        creationDate: 25/04/2023
        absoluteLimit: 500
        isActive: true
        accountType: saving
        accountHolder:
          bsn: 154841
          daylimit: 1000
          transactionLimit: 1000
          firstName: Test2
          lastName: Inholland2   
    SearchingAccountExample1:
      value:
        accountHolder: Test Inholland
        accountNumber: NL90 INHO 0987 6543 21
    SearchingAccountExample2:
      value:
        accountHolder: Test2 Inholland
        accountNumber: NL90 INHO 0987 6543 22
  parameters:
    accountNumberPathParam:
      name: accountNumber
      in: path
      description: The account number of the bank account
      required: true
      schema:
        type: number
    limitQueryParam:
      name: limit
      in: query
      description: The maximum number of items to return (maximum 50).
      required: true
      schema:
        type: integer
        maximum: 50
    offsetQueryParam:
      name: offset
      in: query
      description: The number of items to skip before starting to return items.
      required: true
      schema:
        type: integer
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            message: Please log in to access this resource.
    Forbidden:
      description: Forbidden 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            message: You dont have right permissson to access this resources.
    InternalServerError:
      description: Internal Server Error 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            message: Something went wrong Internally Try Again!
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
            message: The account number does not exist.
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
           message: Mis Data Or No Data 
    conflict:
      description: Conflict
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          example:
           message: You already have an Account
    Nocontent:
      description: No Content
      
          
  schemas:
    SearchingAccount:
      type: object
      properties:
        accountHolder:
          type: string
          description: The name of the account holder
        accountNumber:  
          type: string
          description: The account number of the bank account
    Account:
      type: object
      properties:
        accountNumber:
          type: string
        accountBalance:
          type: number
        creationDate:
          type: string
        isActive:
          type: boolean
        accountType:
          type: string
          description: The type of account either saving or Current.
        accountHolder:
          type: object
          properties:
            bsn:
              type: number
            firstName:
              type: string
            lastName:
              type: string
            daylimit:
              type: number
            transcationLimit:
              type: number
    CreatingAccount:
      type: object
      properties:
        daylimit:
          type: number
        transcationLimit:
          type: number
        absoluteLimit:
          type: number
        accountType:
          type: string
          enum: [saving, current]
          description: The type of account either saving or Current.
        accountHolderBSN:
              type: number
    ErrorMessage:
      type: object
      properties:
        message: 
          type: string
          description: this  message will sent when error 
      
paths:
  /accounts:
    get:
      tags:
        - Employee Access
      summary: Get all bank accounts
      parameters:
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
        - in: query
          name: accountType
          description: Will return the accounts of the given type
          required: false
          schema:
            type: string
            enum: [Saving, Current]
          example: saving
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
              examples:
                FullAccountEg1:
                  $ref: '#/components/examples/FullAccountEg1'
                FullAccountEg2:
                  $ref: '#/components/examples/FullAccountEg2'      
        '500':
           $ref: '#/components/responses/InternalServerError'
           
        '401':
            $ref: '#/components/responses/Unauthorized'
                   
        '403':           
          $ref: '#/components/responses/Forbidden'
          
    post:
      tags:
        - Employee Access
      summary: This endpoint is used to create an Account By Employee
      responses:
        '201':
          description: OK
          content: 
            application/json:
              schema:
                 $ref: '#/components/schemas/CreatingAccount'
              examples:
                FullAccountEg1:
                  $ref: '#/components/examples/FullAccountEg1'
                  
        '403':           
           $ref: '#/components/responses/Forbidden'
           
        '401':
            $ref: '#/components/responses/Unauthorized'
            
        '500':
           $ref: '#/components/responses/InternalServerError'
        
        '400':
           $ref: '#/components/responses/BadRequest'
           
        '409': 
            $ref: '#/components/responses/conflict'
      
  /accounts/{accountNumber}:                 
    get:
      tags:
          - Employee Access
      summary: get one bank account with account number and customer can only access his/her own account
      parameters:
        - $ref: '#/components/parameters/accountNumberPathParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Account'
              examples:
                FullAccountEg1:
                  $ref: '#/components/examples/FullAccountEg1'
        '404':
          $ref: '#/components/responses/NotFound'
  
        '401':
            $ref: '#/components/responses/Unauthorized'
                   
        '403':           
           $ref: '#/components/responses/Forbidden'

        '500':
           $ref: '#/components/responses/InternalServerError'
             
    put:
      tags:
          - Employee Access
      summary: The endpoint is used to update the details of Account
      parameters:
       - $ref: '#/components/parameters/accountNumberPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: ok
          content:
            application/json:
                schema:
                 $ref: '#/components/schemas/Account'
                examples:
                  FullAccountEg1:
                    $ref: '#/components/examples/FullAccountEg1'
        '404':
          $ref: '#/components/responses/NotFound'
          
        '403':           
           $ref: '#/components/responses/Forbidden'
           
        '401':
            $ref: '#/components/responses/Unauthorized'
            
        '500':
           $ref: '#/components/responses/InternalServerError'
        
        '400':
           $ref: '#/components/responses/BadRequest'
           
  /accounts/AccountStatus/{accountNumber}:
    put:  
      tags:
          - Employee Access
      summary: The endpoint is used to update the status of Account only
      parameters:
        - $ref: '#/components/parameters/accountNumberPathParam'
      requestBody:
        required: true
        content:
           application/json:
              schema:
                type: object
                properties:
                  IsActive:
                    type: boolean
                example:
                  IsActive: true
      responses:
        '204':
          $ref: '#/components/responses/Nocontent'

        '404':
          $ref: '#/components/responses/NotFound'
          
        '403':           
           $ref: '#/components/responses/Forbidden'
           
        '401':
            $ref: '#/components/responses/Unauthorized'
            
        '500':
           $ref: '#/components/responses/InternalServerError'
        
        '400':
           $ref: '#/components/responses/BadRequest'

  /accounts/SearchByCustomerName:
    get:
      tags:
        - Customer Access & Employee Access
      summary: Get all Current accounts by Searching With Name 
      parameters:
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
        - in: query
          name: customer Name
          description: Will return the accounts matching given customer name
          required: true
          schema:
            type: string
          example: test
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchingAccount'
              examples:
                SearchingAccountExample1:
                  $ref: '#/components/examples/SearchingAccountExample1'
                SearchingAccountExample2:
                  $ref: '#/components/examples/SearchingAccountExample2'
        '404': 
          $ref: '#/components/responses/NotFound'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '500':
           $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'